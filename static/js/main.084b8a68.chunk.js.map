{"version":3,"sources":["App.tsx","index.tsx"],"names":["Sorting","goodsFromServer","App","state","goods","isStarted","isReversed","isSorted","Default","length","handleToStart","setState","handleToReset","sortByReverse","sortByAscend","Asc","sortByLength","Length","this","visibleGoods","filter","good","sort","firstWord","secondWord","localeCompare","reverse","className","type","onClick","name","value","onChange","event","Number","target","selected","filterGood","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAwBKA,E,kFArBCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAWGD,O,qBAAAA,I,aAAAA,I,oBAAAA,M,SAMCE,E,4MACJC,MAAe,CACbC,MAAM,GAAD,OAAMH,GACXI,WAAW,EACXC,YAAY,EACZC,SAAUP,EAAQQ,QAClBC,OAAQ,G,EAGVC,cAAgB,WACd,EAAKC,SAAS,CAAEN,WAAW,K,EAG7BO,cAAgB,WACd,EAAKD,SAAS,CACZP,MAAM,GAAD,OAAMH,GACXK,YAAY,EACZC,SAAUP,EAAQQ,QAClBC,OAAQ,K,EAIZI,cAAgB,WACd,EAAKF,SAAS,CAAEL,YAAY,K,EAG9BQ,aAAe,WACb,EAAKH,SAAS,CAAEJ,SAAUP,EAAQe,O,EAGpCC,aAAe,WACb,EAAKL,SAAS,CAAEJ,SAAUP,EAAQiB,U,4CAGpC,WAAU,IAAD,OACP,EAMIC,KAAKf,MALPC,EADF,EACEA,MACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,SACAE,EALF,EAKEA,OAGEU,EAAe,YAAIf,GAAOgB,QAAO,SAAAC,GAAI,OAAIA,EAAKZ,QAAUA,KAE5D,OAAQF,GACN,KAAKP,EAAQe,IACXI,EAAaG,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUE,cAAcD,MAE1B,MACF,KAAKxB,EAAQiB,OACXE,EAAaG,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUd,OAASe,EAAWf,UAEhC,MACF,QACGU,EAAY,YAAOf,GAOxB,OAJIE,GACFa,EAAaO,UAIb,sBAAKC,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,WAAf,UAEMtB,GAEE,wBACEuB,KAAK,SACLD,UAAU,kBACVE,QAASX,KAAKR,cAHhB,uBAcRL,GAEE,sBAAKsB,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,wBACEC,KAAK,SACLD,UAAU,kBACVE,QAASX,KAAKL,cAHhB,uBASF,qBAAKc,UAAU,WAAf,SACE,wBACEC,KAAK,SACLD,UAAU,kBACVE,QAASX,KAAKJ,aAHhB,yBASF,qBAAKa,UAAU,WAAf,SACE,wBACEC,KAAK,SACLD,UAAU,kBACVE,QAASX,KAAKF,aAHhB,yBASF,qBAAKW,UAAU,WAAf,SACE,wBACEC,KAAK,SACLD,UAAU,kBACVE,QAASX,KAAKN,cAHhB,qBASF,qBAAKe,UAAU,WAAf,SACE,yBACEA,UAAU,cACV,aAAW,yBACXG,KAAK,SACLC,MAAOtB,EACPuB,SAAU,SAACC,GACT,EAAKtB,SAAS,CACZF,OAAQyB,OAAOD,EAAME,OAAOJ,UAPlC,UAWE,wBAAQK,UAAQ,EAAhB,wBACA,wBAAQL,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,qBAGJ,uBACA,uBACA,qBAAKJ,UAAU,wBAAf,SACE,6BACGR,EACEC,QAAO,SAACiB,GAAD,OAAgBA,EAAW5B,QAAUA,KAC5C6B,KAAI,SAACjB,GAAD,OACH,oBAAeM,UAAU,gBAAzB,SACGN,GADMA,oB,GAhKbkB,IAAMC,WA+KTtC,IC1MfuC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.084b8a68.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[],\n  isStarted: boolean,\n  isReversed: boolean,\n  isSorted: Sorting,\n  length: number,\n};\n\nenum Sorting {\n  Default,\n  Asc,\n  Length,\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: [...goodsFromServer],\n    isStarted: false,\n    isReversed: false,\n    isSorted: Sorting.Default,\n    length: 1,\n  };\n\n  handleToStart = () => {\n    this.setState({ isStarted: true });\n  };\n\n  handleToReset = () => {\n    this.setState({\n      goods: [...goodsFromServer],\n      isReversed: false,\n      isSorted: Sorting.Default,\n      length: 1,\n    });\n  };\n\n  sortByReverse = () => {\n    this.setState({ isReversed: true });\n  };\n\n  sortByAscend = () => {\n    this.setState({ isSorted: Sorting.Asc });\n  };\n\n  sortByLength = () => {\n    this.setState({ isSorted: Sorting.Length });\n  };\n\n  render() {\n    const {\n      goods,\n      isStarted,\n      isReversed,\n      isSorted,\n      length,\n    } = this.state;\n\n    let visibleGoods = [...goods].filter(good => good.length >= length);\n\n    switch (isSorted) {\n      case Sorting.Asc:\n        visibleGoods.sort((firstWord, secondWord) => (\n          firstWord.localeCompare(secondWord)\n        ));\n        break;\n      case Sorting.Length:\n        visibleGoods.sort((firstWord, secondWord) => (\n          firstWord.length - secondWord.length\n        ));\n        break;\n      default:\n        (visibleGoods = [...goods]);\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-2\">\n            {\n              (!isStarted\n                && (\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-success\"\n                    onClick={this.handleToStart}\n                  >\n                    Start\n                  </button>\n                )\n              )\n            }\n          </div>\n\n        </div>\n        {(\n          isStarted\n          && (\n            <div className=\"row\">\n              <div className=\"col-md-2\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-success\"\n                  onClick={this.sortByReverse}\n                >\n                  Reverse\n                </button>\n              </div>\n\n              <div className=\"col-md-2\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-success\"\n                  onClick={this.sortByAscend}\n                >\n                  Ascending\n                </button>\n              </div>\n\n              <div className=\"col-md-2\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-success\"\n                  onClick={this.sortByLength}\n                >\n                  By Length\n                </button>\n              </div>\n\n              <div className=\"col-md-2\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-success\"\n                  onClick={this.handleToReset}\n                >\n                  Reset\n                </button>\n              </div>\n\n              <div className=\"col-md-2\">\n                <select\n                  className=\"form-select\"\n                  aria-label=\"Default select example\"\n                  name=\"length\"\n                  value={length}\n                  onChange={(event) => {\n                    this.setState({\n                      length: Number(event.target.value),\n                    });\n                  }}\n                >\n                  <option selected>--Choose--</option>\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                  <option value=\"5\">5</option>\n                  <option value=\"6\">6</option>\n                  <option value=\"7\">7</option>\n                  <option value=\"8\">8</option>\n                  <option value=\"9\">9</option>\n                  <option value=\"10\">10</option>\n                </select>\n              </div>\n              <br />\n              <br />\n              <div className=\"col-md-12 text-center\">\n                <ul>\n                  {visibleGoods\n                    .filter((filterGood) => filterGood.length >= length)\n                    .map((good) => (\n                      <li key={good} className=\"list-unstyled\">\n                        {good}\n                      </li>\n                    ))}\n                </ul>\n              </div>\n            </div>\n          )\n        )}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}